[{"C:\\Users\\Serega\\Desktop\\recipe\\src\\index.tsx":"1","C:\\Users\\Serega\\Desktop\\recipe\\src\\app\\reportWebVitals.ts":"2","C:\\Users\\Serega\\Desktop\\recipe\\src\\app\\App.tsx":"3","C:\\Users\\Serega\\Desktop\\recipe\\src\\app\\components\\recipe.component.tsx":"4"},{"size":517,"mtime":1609847354477,"results":"5","hashOfConfig":"6"},{"size":431,"mtime":1609845848029,"results":"7","hashOfConfig":"6"},{"size":1874,"mtime":1609865649698,"results":"8","hashOfConfig":"6"},{"size":553,"mtime":1609865651333,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"21zk78",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Serega\\Desktop\\recipe\\src\\index.tsx",[],["21","22","23","24","25"],"C:\\Users\\Serega\\Desktop\\recipe\\src\\app\\reportWebVitals.ts",[],"C:\\Users\\Serega\\Desktop\\recipe\\src\\app\\App.tsx",["26"],"import React, { useEffect, useState } from 'react';\nimport Recipe from './components/recipe.component';\n\nconst App = (): JSX.Element => {\n  const APP_ID = '75dacbe7';\n  const APP_KEY = 'fb30cc8e1fbd364407862bb77cfca31b';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('cherry');\n\n  const getRecipes = async () => {\n    const res = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await res.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"content\">\n          <form className=\"search\" onSubmit={getSearch}>\n            <h1 className=\"search__title\">Search recipe</h1>\n            <input\n              className=\"search__bar\"\n              type=\"text\"\n              value={search}\n              placeholder=\"Cherry\"\n              required\n              onChange={updateSearch}\n            />\n            <button className=\"search__btn\">Search</button>\n          </form>\n          <div className=\"recipes\">\n            {recipes.map((recipeItem: any) => (\n              <Recipe\n                key={recipeItem.recipe.label}\n                title={recipeItem.recipe.label}\n                calories={recipeItem.recipe.calories}\n                ingredients={recipeItem.recipe.ingredients}\n                image={recipeItem.recipe.image}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\Serega\\Desktop\\recipe\\src\\app\\components\\recipe.component.tsx",["27","28","29"],"import React from 'react';\n\nconst Recipe = ({ title, calories, ingredients, image }: any): JSX.Element => {\n  return (\n    <div className=\"recipe\">\n      <h2 className=\"recipe__title\">{title}</h2>\n      <p className=\"recipe__calories\">Calories: {parseInt(calories, 10)}</p>\n      <ul className=\"recipe__ingredients\">\n        {ingredients.map((ingredient: any) => (\n          <li key={ingredient.text}>{ingredient.text}</li>\n        ))}\n      </ul>\n      <img className=\"recipe__img\" src={image} alt={title} />\n    </div>\n  );\n};\n\nexport default Recipe;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":49,"column":39,"nodeType":"42","messageId":"43","endLine":49,"endColumn":42,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":17,"nodeType":"47","messageId":"48","endLine":3,"endColumn":61},{"ruleId":"40","severity":1,"message":"41","line":3,"column":58,"nodeType":"42","messageId":"43","endLine":3,"endColumn":61,"suggestions":"49"},{"ruleId":"40","severity":1,"message":"41","line":9,"column":39,"nodeType":"42","messageId":"43","endLine":9,"endColumn":42,"suggestions":"50"},"lines-around-directive",["51"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["52","53"],"@typescript-eslint/explicit-module-boundary-types","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["54","55"],["56","57"],"padding-line-between-statements",{"messageId":"58","fix":"59","desc":"60"},{"messageId":"61","fix":"62","desc":"63"},{"messageId":"58","fix":"64","desc":"60"},{"messageId":"61","fix":"65","desc":"63"},{"messageId":"58","fix":"66","desc":"60"},{"messageId":"61","fix":"67","desc":"63"},"suggestUnknown",{"range":"68","text":"69"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"68","text":"70"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"71","text":"69"},{"range":"71","text":"70"},{"range":"72","text":"69"},{"range":"72","text":"70"},[1468,1471],"unknown","never",[85,88],[355,358]]